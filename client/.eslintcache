[{"/Users/lisawand/SEIFolder/unit3/homework/portfolio-host/client/src/index.js":"1","/Users/lisawand/SEIFolder/unit3/homework/portfolio-host/client/src/httpRequest.js":"2","/Users/lisawand/SEIFolder/unit3/homework/portfolio-host/client/src/App.js":"3","/Users/lisawand/SEIFolder/unit3/homework/portfolio-host/client/src/pages/PortfolioPage.js":"4","/Users/lisawand/SEIFolder/unit3/homework/portfolio-host/client/src/pages/LandingPage.js":"5","/Users/lisawand/SEIFolder/unit3/homework/portfolio-host/client/src/pages/SignInUpPage.js":"6","/Users/lisawand/SEIFolder/unit3/homework/portfolio-host/client/src/pages/ServiceTestPage.js":"7","/Users/lisawand/SEIFolder/unit3/homework/portfolio-host/client/src/pages/MainPage.js":"8","/Users/lisawand/SEIFolder/unit3/homework/portfolio-host/client/src/pages/subcomponents/ProfileCard.js":"9"},{"size":396,"mtime":1607379159689,"results":"10","hashOfConfig":"11"},{"size":10612,"mtime":1607287597287,"results":"12","hashOfConfig":"11"},{"size":1814,"mtime":1607379191802,"results":"13","hashOfConfig":"11"},{"size":0,"mtime":1607121354679,"results":"14","hashOfConfig":"11"},{"size":4436,"mtime":1607371118807,"results":"15","hashOfConfig":"11"},{"size":3171,"mtime":1607297527592,"results":"16","hashOfConfig":"11"},{"size":1422,"mtime":1607297527591,"results":"17","hashOfConfig":"11"},{"size":3358,"mtime":1607379441393,"results":"18","hashOfConfig":"11"},{"size":2435,"mtime":1607379717105,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1q2lml3",{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"25"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"25"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/lisawand/SEIFolder/unit3/homework/portfolio-host/client/src/index.js",["42"],"/Users/lisawand/SEIFolder/unit3/homework/portfolio-host/client/src/httpRequest.js",["43"],"import axios from 'axios'\nconst ApiClient = axios.create({ baseURL: 'http://localhost:3003/api/' })\nexport const {post, get, put} = ApiClient \nexport const del = (path) => ApiClient.delete(path)\n\n\n\n// uncomment when AUTH is ready\n// ApiClient.interceptors.request.use(\n//     async (config) => {\n//     const token = localStorage.getItem('token')\n//     if (token) {\n//         config.headers.Authorization = `Bearer ${token}`\n//     }\n//     return config\n//     },\n//     (err) => Promise.reject(err)\n// )\n\n/**\n * @param {string} routeKey\n * @param {object} payload   // payload => {body:{title: \"project title\"}, params:{\"/:user_id/:project_id\"}}\n * @param {array} dataRequest\n */\nexport const httpRequest = (routeKey, payload, dataRequest) => {\n    const valueIfExists = (variableToCheck, valueIfExists, valueIfNot) => variableToCheck !== \"undefined\" ? valueIfExists : (valueIfNot !== \"undefined\" ? valueIfNot : null)\n    const {body} = valueIfExists(payload.body, payload.body, {})\n    const params = valueIfExists(payload.params, payload.params, \"\")\n    const userRequestedData = valueIfExists(dataRequest, true, false)\n    // each key of the route object shares its name with the controller at the end of the route\n    const route = {\n        login: post(`UserRouter/login${params}`, body),\n        createUser: post(`UserRouter/create${params}`, body), \n        readUser: get(`UserRouter/read${params}`, body),\n        updateUser: put(`UserRouter/update${params}`, body), \n        deleteUser: del(`UserRouter/delete${params}`, body),\n    \n        createProfile: post(`profiles/create${params}`, body),\n        readProfile: get(`profiles/read${params}`, body), \n        ReadAllProfiles: get(`profiles/read${params}`, body), \n        updateProfile: put(`profiles/update${params}`, body), \n        deleteProfile: del(`profiles/delete${params}`, body), \n    \n        createProject: post(`UserRouter/create${params}`, body),\n        readProject: get(`UserRouter/read${params}`, body),  \n        updateProject: put(`UserRouter/update${params}`, body), \n        deleteProject: del(`UserRouter/delete${params}`, body)\n    }\n    try {\n        const response = () => async () => await route[routeKey]()\n        console.log(response)\n        // const keys = Object.keys(response)\n        // ==> [\"key\", \"key\" , \"key\", \"key\"]  desired by user\n        // keys.map((key) => )\n        \n        // \n        // const dataToReturn = userRequestedData ? Object.entries(response).filter([k,v] =>  ) dataRequest.forEach\n        return response\n    } catch (error) {\n        console.log(error)\n    }\n}\n\n// const [loginInformation, setLoginInfo] = useState({})\n// const [isUserLoggedIn, setLoginStatus] = useState({})\n\n// <button onClick={()=>setLoginStatus(httpRequest(\"login\", loginInformation, [\"isUserLoggedIn\"]))}></button>\n\n// httpRequest(\"login\",{})\n\n// extractResponse({username: usernameField, password: passField}).data.loggedIn\n// setLoggedIn(extractResponse({username: usernameField, password: passField}).data.loggedIn)\n\n// <button onClick={()=> setLoggedIn(((()=>httpRequest(\"User\", props.post, \"login\", {username: \"collin\", password: \"pass\"})).userLoggedIn))}></button>\n\n\n\n    // const c = crudMethod, m = model, p = payload, report = {c:c, m:m, p:p}, log = (report) => console.log(`Request arrived in Server.js => table: ${report.m} => method: '${report.c}' carrying payload: `, report.p)\n    // const {post, get, put, delete} = ApiClient \n\n// example: httpRequest(\"User\", props.post, \"login\", {username: \"collin\", password: \"pass\"})\n    \n\n\n// /**\n//  * @param {object} payload\n//  */\n\n// const httpRequest = async (Model, AxiosMethod, crudMethod, payload) => await AxiosMethod(`${Model}Router/${crudMethod}/`)\n// const extractResponse = (payload) => httpRequest(rteLogin, payload)\n// extractResponse({username: usernameField, password: passField}).data.loggedIn\n// setLoggedIn(extractResponse({username: usernameField, password: passField}).data.loggedIn)\n\n\n\n\n\n\n    // export default httpRequest = async (AxiosMethod, crudMethod, model,  payload) => {\n\n   //    'ProjectRouter/\n\n// const crudSwitch = (model, crudMethod) => {\n//     switch (crudMethod) {\n//         case \"create\":\n//             log(report)\n//             await ApiClient.post(`/UserRouter/create/`)\n//             break\n//         case \"login\":\n//             log(report)\n//             await ApiClient.post(`/UserRouter/login/`)\n//             break\n//         case \"read\":\n//             log(report)\n//             await ApiClient.read(`/UserRouter/login/`)\n//             break\n//         case \"update\":\n//             log(report)\n//             await ApiClient.put(`/UserRouter/login/`)\n//             break\n//         case \"delete\":\n//             log(report)\n//             await ApiClient.delete(`/UserRouter/login/`)\n//             break\n//     }\n//     break\n// }\n\n// case \"User\":\n//     crudSwitch(\"User\")\n// case \"Profile\":\n//     crudSwitch(\"Profile\")\n// case \"Project\":\n//     crudSwitch(\"Project\")\n// }\n\n\n\n\n\n\n\n\n//     switch (model) {\n//         case \"User\":\n//             switch (crudMethod) {\n//                 case \"create\":\n//                     log(report)\n//                     await ApiClient.post(`/UserRouter/create/`)\n//                     break\n//                 case \"login\":\n//                     log(report)\n//                     await ApiClient.post(`/UserRouter/login/`)\n//                     break\n//                 case \"read\":\n//                     log(report)\n//                     await ApiClient.read(`/UserRouter/login/`)\n//                     break\n//                 case \"update\":\n//                     log(report)\n//                     await ApiClient.put(`/UserRouter/login/`)\n//                     break\n//                 case \"delete\":\n//                     log(report)\n//                     await ApiClient.delete(`/UserRouter/login/`)\n//                     break\n//             }\n//             break\n//         case \"Project\":\n//             switch (crudMethod) {\n//                 case \"create\":\n//                     log(report)\n//                     await ApiClient.post(`/UserRouter/create/`)\n//                     break\n//                 case \"read\":\n//                     log(report)\n//                     await ApiClient.read(`/UserRouter/login/`)\n//                     break\n//                 case \"update\":\n//                     log(report)\n//                     await ApiClient.put(`/UserRouter/login/`)\n//                     break\n//                 case \"delete\":\n//                     log(report)\n//                     await ApiClient.delete(`/UserRouter/login/`)\n//                     break\n//         case \"Profile\":\n//             switch (crudMethod) {\n//                 case \"create\":\n//                     log(report)\n//                     await ApiClient.post(`/UserRouter/create/`)\n//                     break\n//                 case \"read\":\n//                     log(report)\n//                     await ApiClient.read(`/UserRouter/login/`)\n//                     break\n//                 case \"update\":\n//                     log(report)\n//                     await ApiClient.put(`/UserRouter/login/`)\n//                     break\n//                 case \"delete\":\n//                     log(report)\n//                     await ApiClient.delete(`/UserRouter/login/`)\n//                     break\n//         default: \n//             console.log(\"No cases matched. httpRequest() input or switch case name likely mispelled or mismatched.\")\n//     }\n// }\n\n// switch (crudMethod) {\n//             case \"create\":\n//                 log(report)\n//                 await ApiClient.post(`${Model}Router/${crudMethod}/`)\n//                 break\n//             case \"login\":\n//                 log(report)\n//                 await ApiClient.post(`/UserRouter/login/`)\n//                 break\n//             case \"read\":\n//                 log(report)\n//                 await ApiClient.read(`/UserRouter/login/`)\n//                 break\n//             case \"update\":\n//                 log(report)\n//                 await ApiClient.put(`/UserRouter/login/`)\n//                 break\n//             case \"delete\":\n//                 log(report)\n//                 await ApiClient.delete(`/UserRouter/login/`)\n//                 break\n//         }\n//         break\n//     default: \n//         console.log(\"No cases matched. httpRequest() input or switch case name likely mispelled or mismatched.\")\n// }\n// }\n\n    // CRUD REQUESTS AS FOLLOWS: \n\n    // Create: \n    // httpRequest(\"create\", ('Projects' | 'Contributors' | 'Users'), {...field: value, field: value})\n\n    // Read: \n    // httpRequest(\"read\", ('Projects' | 'Contributors' | 'Users'))\n\n    // Update: \n    // httpRequest(\"update\", ('Projects' | 'Contributors' | 'Users'), { newValues: {...field: NEWvalue, field: NEWvalue}, identifier: {field: currentValue}})\n\n    // Delete: \n    // httpRequest(\"update\", ('Projects' | 'Contributors' | 'Users'), {field: identifyingValue})\n\n\n// httpRequest(\"create\", \"Projects\", {\n//     title: \"PROJECT1000\", \n//     description: \"1000\", \n//     deployLink: \"1000\", \n//     repoLink: \"1000\", \n//     technologies: \"1000\", \n//     iframeEnabled: true\n// })\n\n\n// httpRequest(\"update\", \"Projects\", {newValues: {language: \"Ruby\"}, identifier: {language: 'Python'}})\n// httpRequest(\"delete\", \"Projects\", {language: \"Ruby\"})\n\n\n// httpRequest(\"read\", \"Projects\")\n\n\n// httpRequest(\"create\", \"Users\", {\n//     name: \"USER 1\", \n//     email: \"collin@yahoo.com\", \n//     password: \"hi\", \n//     profilepic: \"extremelyhandsome.filehost.com\", \n//     professionalTitle: \"Beast\", \n//     organization: \"Google\", \n//     biography: \"A cool person.\", \n//     locale: \"Chicago\"})\n\n\n// httpRequest(\"update\", \"Users\", {newValues: {email: \"adam@mail.com\"}, identifier: {lastName: 'Honore'}})\n// httpRequest(\"delete\", \"Users\", {lastName: \"Honore\"})\n// httpRequest(\"read\", \"Users\")\n\n\n// httpRequest(\"create\", \"Contributors\", {projectId:4, userId:2, role: \"creator\"})\n// httpRequest(\"update\", \"Contributors\", {newValues: {prompt: \"Fix the for-loop\"}, identifier: {prompt: \"Write a for-loop\"}})\n// httpRequest(\"delete\", \"Contributors\", {prompt: \"Fix the for-loop\"})\n// httpRequest(\"read\", \"Contributors\")\n\n\n// const ContributorsWithCore = async () => {\n//     try {\n//       const Contributors = await Contributors.findAll({\n//         include: [{ model: Cores, as: 'parentCore' }]\n//       })\n//       console.log(Contributors)\n//       return true\n//     } catch (error) {\n//       console.log(error)\n//       return false\n//     }\n//   }\n  \n// ContributorsWithCore()",["44","45"],"/Users/lisawand/SEIFolder/unit3/homework/portfolio-host/client/src/App.js",["46","47"],"/Users/lisawand/SEIFolder/unit3/homework/portfolio-host/client/src/pages/PortfolioPage.js",[],"/Users/lisawand/SEIFolder/unit3/homework/portfolio-host/client/src/pages/LandingPage.js",["48","49","50","51","52","53","54","55"],"import { Link } from 'react-router-dom'\nimport React, {useState, useEffect} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\n// import IconButton from '@material-ui/core/IconButton';\n// import MenuIcon from '@material-ui/icons/Menu';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n  textGreeting: {\n    display: \"block\",\n    marginLeft: \"5vw\",\n    alignText: \"left\",\n    welcome: {\n      fontSize: \"35px\"\n    },\n    subHeader: {\n      fontSize: \"20px\"\n    }\n  },\n  httpTest: {\n    margin: \"0 auto\",\n    marginTop: \"70px\",\n    width: \"300px\",\n    height: \"50px\",\n    display: \"flex\", \n    justifyContent: \"spaceBetween\",\n    textfield: {\n      width: \"60%\", \n      height: \"80px\", \n      backgroundColor: \"white\",\n      border: \"1px solid black\"\n    },\n    loginButton: {\n      display: \"block\",\n      margin: \"0 auto\", \n      width: \"80px\", \n      height: \"40px\",\n      fontSize: \"18px\"\n    },\n    submitTestButton: {\n      height: \"80px\",\n      width: \"80px\",\n      color: \"black\",\n      backgroundColor: \"white\"\n    }\n  }\n}));\nconst LandingPage = (props) => {\n  const {httpRequest, get, put, post} = props\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [displayedProfiles, setProfiles] = useState([])\n  const [searchValue, setSearchField] = useState(\"\")\n  const useEffect = () => {\n    // console.log(\"useEffect reached\")\n    // setProfiles(httpRequest(\"ReadAllProfiles\"))\n\n    // const getProfiles = async () => {\n    //   if (!pageIsLoaded) {\n    //     changeLoadedBoolean(true)\n    //   }\n    }\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <div>\n      <div className={classes.root}>\n        <AppBar position=\"static\">\n          <Toolbar>\n            <Button aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick}> Menu </Button>\n            <Menu id=\"simple-menu\" anchorEl={anchorEl} keepMounted open={Boolean(anchorEl)} onClose={handleClose} >\n              <Link to=\"/signInUp\">\n              <MenuItem onClick={handleClose}> Login </MenuItem>\n              </Link>\n              <Link to=\"/portfolio\">\n              <MenuItem onClick={handleClose}>My account</MenuItem>\n              </Link>\n              <Link to=\"/mainPage\">\n              <MenuItem onClick={handleClose}>Home</MenuItem>\n              </Link>\n            </Menu>\n            <Typography variant=\"h6\" className={classes.title}>DevPortal</Typography>\n            {/** LINK TO SignInSignUp page. <Link /> can accept props to send if need be**/}\n            <Link to=\"/signInUp\">\n              <Button color=\"#fce4ec\">Login</Button>\n            </Link>\n          </Toolbar>\n        </AppBar>\n      </div>\n      <div className={classes.textGreeting}>\n        <h3 className={classes.textGreeting.welcome}>Welcome to Dev Ports</h3>\n        <h4 className={classes.textGreeting.subHeader}>Your site to easy share your portfolio and make new connection with other developers.</h4>\n      </div>\n      <Link className={classes.loginButton} to=\"/signInUp\">\n        <Button variant=\"outlined\" color=\"primary\">Login</Button>\n      </Link>\n      <div className={classes.httpTest}>\n        <input className={classes.httpTest.textfield} onChange={(e)=>setSearchField(e.target.value)}></input>\n        <button className={classes.httpTest.submitTestButton} onClick={()=>httpRequest(\"createProfile\", {body:{}} )}>Submit httpRequest</button>\n      </div>\n\n\n    </div>\n  );\n}\n\nexport default LandingPage\n\n// const HomePage = ()  => {\n//   return(\n// <div>\n// <h3>\n//   Welcome to Dev Ports\n// </h3>\n// <h4>\n//   Your site to easy share your portfolio and make new connection with other developers.\n// </h4>\n// <Link to=\"/login\">\n//   <Button variant=\"outlined\" color=\"primary\">\n//     Login\n// </Button>\n// </Link>\n//   <Link to=\"/signup\">\n//     <Button variant=\"outlined\" color=\"primary\">\n//       Sign up\n// </Button>\n//   </Link>\n// </div>\n//   )\n// }\n\n// export default HomePage\n","/Users/lisawand/SEIFolder/unit3/homework/portfolio-host/client/src/pages/SignInUpPage.js",[],"/Users/lisawand/SEIFolder/unit3/homework/portfolio-host/client/src/pages/ServiceTestPage.js",["56","57","58","59","60"],"import React, {Component, useState} from 'react'\nconst path = \"./subcomponents/ServiceTestComps\"\n// import DbTableCom from `${path}/DbTableCom`\n\n\n\nconst ServiceTest = () => {\n    const models = [\"User, Profile, Projects\"]\n    const map = {\n        User: {\n            modelName: \"User\",\n\n        },\n        Profile: {\n            modelName: \"Profile\"\n        },\n        Projects: {\n            modelName: \"Projects\"\n        },\n\n    }\n    const styles = {\n        componentWrapper: {\n            minHeight: \"100vw\",\n            minWidth: \"100vw\", \n            display: \"grid\", \n            gridTemplateColumns: \"repeat(auto-fill, minmax(300px, 1fr))\",\n            \"gridGap\": \"1.8rem\",\n            margin: \"auto\",\n            padding: \"10px\",\n\n            backgroundColor: 'blue'\n\n        },\n        DatabaseModelWrapper: {\n            minWidth: \"300px\", \n            maxWidth: \"400px\",\n            maxHeight: \"70vh\",\n\n            backgroundColor: 'pink'\n        },\n        requestScrollPanel: {\n\n        },\n    }\n    \n    // rename \"styles\" to \"s\" for component readability\n    let s = styles \n    return (\n        <div>\n            <main style={s.componentWrapper}>\n                <div style={s.DatabaseModelWrapper}>\n                    <div style={s.requestScrollPanel}>\n                        \n\n                    </div>\n\n                </div>\n\n            </main>\n        </div>\n    )\n}\n\nexport default ServiceTest","/Users/lisawand/SEIFolder/unit3/homework/portfolio-host/client/src/pages/MainPage.js",["61","62","63","64","65","66","67","68","69","70","71"],"/Users/lisawand/SEIFolder/unit3/homework/portfolio-host/client/src/pages/subcomponents/ProfileCard.js",[],{"ruleId":"72","severity":1,"message":"73","line":11,"column":30,"nodeType":"74","messageId":"75","endLine":11,"endColumn":31},{"ruleId":"76","severity":1,"message":"77","line":29,"column":11,"nodeType":"78","messageId":"79","endLine":29,"endColumn":28},{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","replacedBy":"83"},{"ruleId":"76","severity":1,"message":"84","line":1,"column":17,"nodeType":"78","messageId":"79","endLine":1,"endColumn":26},{"ruleId":"76","severity":1,"message":"85","line":21,"column":11,"nodeType":"78","messageId":"79","endLine":21,"endColumn":20},{"ruleId":"76","severity":1,"message":"84","line":2,"column":26,"nodeType":"78","messageId":"79","endLine":2,"endColumn":35},{"ruleId":"76","severity":1,"message":"86","line":63,"column":23,"nodeType":"78","messageId":"79","endLine":63,"endColumn":26},{"ruleId":"76","severity":1,"message":"87","line":63,"column":28,"nodeType":"78","messageId":"79","endLine":63,"endColumn":31},{"ruleId":"76","severity":1,"message":"88","line":63,"column":33,"nodeType":"78","messageId":"79","endLine":63,"endColumn":37},{"ruleId":"76","severity":1,"message":"89","line":66,"column":10,"nodeType":"78","messageId":"79","endLine":66,"endColumn":27},{"ruleId":"76","severity":1,"message":"90","line":66,"column":29,"nodeType":"78","messageId":"79","endLine":66,"endColumn":40},{"ruleId":"76","severity":1,"message":"91","line":67,"column":10,"nodeType":"78","messageId":"79","endLine":67,"endColumn":21},{"ruleId":"76","severity":1,"message":"85","line":68,"column":9,"nodeType":"78","messageId":"79","endLine":68,"endColumn":18},{"ruleId":"76","severity":1,"message":"92","line":1,"column":16,"nodeType":"78","messageId":"79","endLine":1,"endColumn":25},{"ruleId":"76","severity":1,"message":"93","line":1,"column":27,"nodeType":"78","messageId":"79","endLine":1,"endColumn":35},{"ruleId":"76","severity":1,"message":"94","line":2,"column":7,"nodeType":"78","messageId":"79","endLine":2,"endColumn":11},{"ruleId":"76","severity":1,"message":"95","line":8,"column":11,"nodeType":"78","messageId":"79","endLine":8,"endColumn":17},{"ruleId":"76","severity":1,"message":"96","line":9,"column":11,"nodeType":"78","messageId":"79","endLine":9,"endColumn":14},{"ruleId":"76","severity":1,"message":"84","line":1,"column":27,"nodeType":"78","messageId":"79","endLine":1,"endColumn":36},{"ruleId":"76","severity":1,"message":"97","line":11,"column":8,"nodeType":"78","messageId":"79","endLine":11,"endColumn":12},{"ruleId":"76","severity":1,"message":"98","line":12,"column":8,"nodeType":"78","messageId":"79","endLine":12,"endColumn":13},{"ruleId":"76","severity":1,"message":"99","line":69,"column":11,"nodeType":"78","messageId":"79","endLine":69,"endColumn":22},{"ruleId":"76","severity":1,"message":"86","line":69,"column":24,"nodeType":"78","messageId":"79","endLine":69,"endColumn":27},{"ruleId":"76","severity":1,"message":"87","line":69,"column":29,"nodeType":"78","messageId":"79","endLine":69,"endColumn":32},{"ruleId":"76","severity":1,"message":"88","line":69,"column":34,"nodeType":"78","messageId":"79","endLine":69,"endColumn":38},{"ruleId":"76","severity":1,"message":"89","line":72,"column":10,"nodeType":"78","messageId":"79","endLine":72,"endColumn":27},{"ruleId":"76","severity":1,"message":"90","line":72,"column":29,"nodeType":"78","messageId":"79","endLine":72,"endColumn":40},{"ruleId":"76","severity":1,"message":"91","line":73,"column":10,"nodeType":"78","messageId":"79","endLine":73,"endColumn":21},{"ruleId":"76","severity":1,"message":"100","line":73,"column":23,"nodeType":"78","messageId":"79","endLine":73,"endColumn":37},"no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","no-unused-vars","'userRequestedData' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["101"],"no-negated-in-lhs",["102"],"'useEffect' is defined but never used.","'useEffect' is assigned a value but never used.","'get' is assigned a value but never used.","'put' is assigned a value but never used.","'post' is assigned a value but never used.","'displayedProfiles' is assigned a value but never used.","'setProfiles' is assigned a value but never used.","'searchValue' is assigned a value but never used.","'Component' is defined but never used.","'useState' is defined but never used.","'path' is assigned a value but never used.","'models' is assigned a value but never used.","'map' is assigned a value but never used.","'Grid' is defined but never used.","'Paper' is defined but never used.","'httpRequest' is assigned a value but never used.","'setSearchField' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]