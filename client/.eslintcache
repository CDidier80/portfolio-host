[{"/Users/lisawand/SEIFolder/unit3/homework/portfolio-host/client/src/index.js":"1","/Users/lisawand/SEIFolder/unit3/homework/portfolio-host/client/src/App.js":"2","/Users/lisawand/SEIFolder/unit3/homework/portfolio-host/client/src/pages/subcomponents/SiSuPanel.js":"3","/Users/lisawand/SEIFolder/unit3/homework/portfolio-host/client/src/pages/HomePage.js":"4","/Users/lisawand/SEIFolder/unit3/homework/portfolio-host/client/src/pages/PortfolioPage.js":"5","/Users/lisawand/SEIFolder/unit3/homework/portfolio-host/client/src/pages/SignInSignUp.js":"6","/Users/lisawand/SEIFolder/unit3/homework/portfolio-host/client/src/pages/subcomponents/SignInSignUpForm.js":"7","/Users/lisawand/SEIFolder/unit3/homework/portfolio-host/client/src/services/Service.js":"8","/Users/lisawand/SEIFolder/unit3/homework/portfolio-host/client/src/pages/SignInUpFunction.js":"9"},{"size":303,"mtime":1607212721796,"results":"10","hashOfConfig":"11"},{"size":1498,"mtime":1607214361233,"results":"12","hashOfConfig":"11"},{"size":4249,"mtime":1607138285445,"results":"13","hashOfConfig":"11"},{"size":2147,"mtime":1607215624471,"results":"14","hashOfConfig":"11"},{"size":0,"mtime":1607121354679,"results":"15","hashOfConfig":"11"},{"size":2986,"mtime":1607214018672,"results":"16","hashOfConfig":"11"},{"size":4256,"mtime":1607213542578,"results":"17","hashOfConfig":"11"},{"size":10163,"mtime":1607205491590,"results":"18","hashOfConfig":"11"},{"size":201,"mtime":1607214322530,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1q2lml3",{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":1,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"22"},"/Users/lisawand/SEIFolder/unit3/homework/portfolio-host/client/src/index.js",[],["46","47"],"/Users/lisawand/SEIFolder/unit3/homework/portfolio-host/client/src/App.js",["48"],"import React, {useEffect, useState } from 'react'\nimport { Switch, Route, withRouter } from 'react-router-dom'\nimport HomePage from \"./pages/HomePage\"\nimport PortfolioPage from \"./pages/PortfolioPage\"\nimport SignInSignUp from \"./pages/SignInUpFunction\"\n// import SignInSignUp from \"./pages/SignInSignUp\"\n// import ProtectedRoute from './components/ProtectedRoute'\n// import Layout from '../src/pages/components/Layout'\n// hello\n\nconst App = (props) => {\n  const [pageIsLoaded, changeLoadedBoolean] = useState(false)\n\n  useEffect(() => {\n    console.log(\"useEffect reached\")\n    const getProfiles = async () => {\n      if (!pageIsLoaded) {\n        changeLoadedBoolean(true)\n      }\n    }\n  })\n\n\n//   goToSignupPage = async (e) => {\n//     e.stopPropagation()\n//     const linkClassName = e.target.className\n//     console.log('Link Class Name :', linkClassName)\n//     await this.setState({loginPageDefault: linkClassName})\n//     await this.props.history.push('/login')\n// }\n\n    return (\n      <main className=\"App\">\n        {pageIsLoaded ? (\n          <div>\n            <h3>Loading...</h3>\n          </div>\n        ) : (\n           <Switch>\n              <Route exact path=\"/\" component={(props) =><HomePage {...props} />}/>\n              <Route path=\"/portfolio\" component={(props) => <PortfolioPage {...props} />}/>\n              <Route path=\"/signInUp\" component={(props) => <SignInSignUp {...props}/>}/>\n            </Switch>\n        )}\n      </main>\n    )\n  }\n\nexport default withRouter(App)","/Users/lisawand/SEIFolder/unit3/homework/portfolio-host/client/src/pages/subcomponents/SiSuPanel.js",["49"],"import React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\n// import LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles} from '@material-ui/core/styles';\n\n\n// user payload body\n// name: payload.name,\n// email: payload.email,\n// password: payload.password,\n// profilepic: payload.profilepic,\n// professionalTitle: payload.professionalTitle,\n// organization: payload.organization,\n// biography: payload.biography,\n// locale: payload.locale\n\n\n\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright Â© '}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        www.freewebstyles.com\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nexport default function SiSuPanel(props) {\n\n  const root = props.styleChoice != \"formStyles\" ? \n    {\n      \"background-color\": \"rgba(255,255,255,.4)\",\n      height: '100vh',\n      maxWidth: `${props.isLeftward ? \"35vw\" : \"0px\"}`,\n      overflow: \"hidden\",\n      position: \"absolute\", \n      right: 0,\n      transition: \"max-width .2s linear\"\n    } : {\n      \"background-color\": \"rgba(255,255,255,.4)\",\n      height: '100vh',\n      width: '45vw',\n      position: \"absolute\", \n      left: \"50%\",\n      transform: \"translate(-50%, 0)\"\n    }\n  \n  const formStyles = makeStyles((theme) => ({\n    root,\n    transparentWhite: {\n      \"background-color\": \"rgba(255,255,255,.4)\",\n    },\n    paper: {\n      margin: theme.spacing(8, 4),\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      backgroundColor: \"rgba(255,255,255,.4)\",\n    },\n    avatar: {\n      margin: theme.spacing(1),\n      backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n      width: '100%', // Fix IE 11 issue.\n      marginTop: theme.spacing(1),\n      \"background-color\": \"rgba(255,255,255)\",\n    },\n    submit: {\n      margin: theme.spacing(3, 0, 2),\n      \"background-color\": \"#2196F3\",\n      \"font-weight\": \"bold\"\n    },\n  }));\n  \n\n  const classes = formStyles() \n  const {panelState, updateField, formSubmit} = props\n  let isSigningUp = panelState === \"signupLink\" ? true : false\n  return (\n    <Grid container className={classes.root}>\n      <Grid component={Paper} square className={classes.paperRoot}>\n        <div className={classes.paper}>\n          <Avatar className={classes.avatar}>{/* <LockOutlinedIcon /> */}</Avatar>\n          <Typography component=\"h1\" variant=\"h5\">{isSigningUp ? \"Sign Up\": \"Sign in\"}</Typography>\n          <form className={classes.form} noValidate>\n            {isSigningUp ? <TextField variant=\"outlined\" margin=\"normal\" required fullWidth id=\"username\" label=\"Choose Username\" name=\"username\" onChange={(e)=>updateField(e, 'username')} autoFocus/> : null}\n            <TextField variant=\"outlined\" margin=\"normal\" required fullWidth id=\"email\" label=\"Email Address\" name=\"email\" autoComplete=\"email\" autoFocus onChange={(e)=>updateField(e, 'email')}/>\n            <TextField variant=\"outlined\" margin=\"normal\" required fullWidth id=\"password\" label={isSigningUp ? \"Choose Password\" : \"Password\"} name=\"password\" onChange={(e)=>updateField(e, 'password')} autoComplete=\"current-password\" type=\"password\" autoFocus/>\n            <FormControlLabel control={<Checkbox value=\"remember\" color=\"primary\" />}label=\"Remember me\"/>\n            <Button type=\"button\" onClick={(e)=>formSubmit(e)} fullWidth variant=\"contained\" color=\"primary\" className={classes.submit}>{isSigningUp ? \"CONFIRM AND SIGN IN\" : \"SIGN IN\"}</Button>\n            {!isSigningUp ? <Link href=\"#\" variant=\"body1\">{\"Don't have an account? Sign Up\"}</Link> : null}\n            <Box mt={5}>\n              <Copyright />\n            </Box>\n          </form>\n        </div>\n      </Grid>\n    </Grid>\n  );\n}",["50","51"],"/Users/lisawand/SEIFolder/unit3/homework/portfolio-host/client/src/pages/HomePage.js",[],"/Users/lisawand/SEIFolder/unit3/homework/portfolio-host/client/src/pages/PortfolioPage.js",[],"/Users/lisawand/SEIFolder/unit3/homework/portfolio-host/client/src/pages/SignInSignUp.js",["52","53","54"],"/Users/lisawand/SEIFolder/unit3/homework/portfolio-host/client/src/pages/subcomponents/SignInSignUpForm.js",["55"],"import React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\n// import LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles} from '@material-ui/core/styles';\n\n\n// user payload body\n// name: payload.name,\n// email: payload.email,\n// password: payload.password,\n// profilepic: payload.profilepic,\n// professionalTitle: payload.professionalTitle,\n// organization: payload.organization,\n// biography: payload.biography,\n// locale: payload.locale\n\n\n\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright Â© '}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        www.freewebstyles.com\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nexport default function SignInSignUpForm(props) {\n\n  const root = props.styleChoice != \"formStyles\" ? \n    {\n      \"background-color\": \"rgba(255,255,255,.4)\",\n      height: '100vh',\n      maxWidth: `${props.isLeftward ? \"35vw\" : \"0px\"}`,\n      overflow: \"hidden\",\n      position: \"absolute\", \n      right: 0,\n      transition: \"max-width .2s linear\"\n    } : {\n      \"background-color\": \"rgba(255,255,255,.4)\",\n      height: '100vh',\n      width: '45vw',\n      position: \"absolute\", \n      left: \"50%\",\n      transform: \"translate(-50%, 0)\"\n    }\n  \n  const formStyles = makeStyles((theme) => ({\n    root,\n    transparentWhite: {\n      \"background-color\": \"rgba(255,255,255,.4)\",\n    },\n    paper: {\n      margin: theme.spacing(8, 4),\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      backgroundColor: \"rgba(255,255,255,.4)\",\n    },\n    avatar: {\n      margin: theme.spacing(1),\n      backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n      width: '100%', // Fix IE 11 issue.\n      marginTop: theme.spacing(1),\n      \"background-color\": \"rgba(255,255,255)\",\n    },\n    submit: {\n      margin: theme.spacing(3, 0, 2),\n      \"background-color\": \"#2196F3\",\n      \"font-weight\": \"bold\"\n    },\n  }));\n  \n\n  const classes = formStyles() \n  const {panelState, updateField, formSubmit} = props\n  let isSigningUp = panelState === \"signupLink\" ? true : false\n  return (\n    <Grid container className={classes.root}>\n      <Grid component={Paper} square className={classes.paperRoot}>\n        <div className={classes.paper}>\n          <Avatar className={classes.avatar}>{/* <LockOutlinedIcon /> */}</Avatar>\n          <Typography component=\"h1\" variant=\"h5\">{isSigningUp ? \"Sign Up\": \"Sign in\"}</Typography>\n          <form className={classes.form} noValidate>\n            {isSigningUp ? <TextField variant=\"outlined\" margin=\"normal\" required fullWidth id=\"username\" label=\"Choose Username\" name=\"username\" onChange={(e)=>updateField(e, 'username')} autoFocus/> : null}\n            <TextField variant=\"outlined\" margin=\"normal\" required fullWidth id=\"email\" label=\"Email Address\" name=\"email\" autoComplete=\"email\" autoFocus onChange={(e)=>updateField(e, 'email')}/>\n            <TextField variant=\"outlined\" margin=\"normal\" required fullWidth id=\"password\" label={isSigningUp ? \"Choose Password\" : \"Password\"} name=\"password\" onChange={(e)=>updateField(e, 'password')} autoComplete=\"current-password\" type=\"password\" autoFocus/>\n            <FormControlLabel control={<Checkbox value=\"remember\" color=\"primary\" />}label=\"Remember me\"/>\n            <Button type=\"button\" onClick={(e)=>formSubmit(e)} fullWidth variant=\"contained\" color=\"primary\" className={classes.submit}>{isSigningUp ? \"CONFIRM AND SIGN IN\" : \"SIGN IN\"}</Button>\n            {!isSigningUp ? <Link href=\"#\" variant=\"body1\">{\"Don't have an account? Sign Up\"}</Link> : null}\n            <Box mt={5}>\n              <Copyright />\n            </Box>\n          </form>\n        </div>\n      </Grid>\n    </Grid>\n  );\n}","/Users/lisawand/SEIFolder/unit3/homework/portfolio-host/client/src/services/Service.js",["56"],"import axios from 'axios'\nconst ApiClient = axios.create({ baseURL: 'http://localhost:3003/api/' })\nconst {post, get, put} = ApiClient, del = (path) => ApiClient.delete(path)\n\n/**\n * @param {string} routeKey\n * @param {object} payload   // payload => {body:{title: \"project title\"}, params:{\"/:user_id/:project_id\"}}\n * @param {array} dataRequest\n */\nconst httpRequest = (routeKey, payload, dataRequest) => {\n    const valueIfExists = (variableToCheck, valueIfExists, valueIfNot) => variableToCheck !== \"undefined\" ? valueIfExists : (valueIfNot !== \"undefined\" ? valueIfNot : null)\n    const {body} = valueIfExists(payload.body, payload.body, {})\n    const params = valueIfExists(payload.params, payload.params, \"\")\n    const userRequestedData = valueIfExists(dataRequest, true, false)\n    // each key of the route object shares its name with the controller at the end of the route\n    const route = {\n        login: post(`UserRouter/login${params}`, body),\n        createUser: post(`UserRouter/create${params}`, body), \n        readUser: get(`UserRouter/read${params}`, body),\n        updateUser: put(`UserRouter/update${params}`, body), \n        deleteUser: del(`UserRouter/delete${params}`, body),\n    \n        createProfile: post(`ProfileRouter/create${params}`, body),\n        readProfile: get(`ProfileRouter/read${params}`, body), \n        updateProfile: put(`ProfileRouter/update${params}`, body), \n        deleteProfile: del(`ProfileRouter/delete${params}`, body), \n    \n        createProject: post(`UserRouter/create${params}`, body),\n        readProject: get(`UserRouter/read${params}`, body),  \n        updateProject: put(`UserRouter/update${params}`, body), \n        deleteProject: del(`UserRouter/delete${params}`, body)\n    }\n    try {\n        const response = () => async () => await route[routeKey]()\n        \n        const keys = Object.keys(response)\n        // ==> [\"key\", \"key\" , \"key\", \"key\"]  desired by user\n        // keys.map((key) => )\n        \n        // \n        // const dataToReturn = userRequestedData ? Object.entries(response).filter([k,v] =>  ) dataRequest.forEach\n        // return\n    } catch (error) {\n        console.log(error)\n    }\n}\n\nconst [loginInformation, setLoginInfo] = useState({})\nconst [isUserLoggedIn, setLoginStatus] = useState({})\n\n<button onClick={()=>setLoginStatus(httpRequest(\"login\", loginInformation, [\"isUserLoggedIn\"]))}></button>\n\nhttpRequest(\"login\",{})\n\n// extractResponse({username: usernameField, password: passField}).data.loggedIn\n// setLoggedIn(extractResponse({username: usernameField, password: passField}).data.loggedIn)\n\n// <button onClick={()=> setLoggedIn(((()=>httpRequest(\"User\", props.post, \"login\", {username: \"collin\", password: \"pass\"})).userLoggedIn))}></button>\n\n\n\n    const c = crudMethod, m = model, p = payload, report = {c:c, m:m, p:p}, log = (report) => console.log(`Request arrived in Server.js => table: ${report.m} => method: '${report.c}' carrying payload: `, report.p)\n    // const {post, get, put, delete} = ApiClient \n\n// example: httpRequest(\"User\", props.post, \"login\", {username: \"collin\", password: \"pass\"})\n    \n\n\n/**\n * @param {object} payload\n */\n\nconst httpRequest = async (Model, AxiosMethod, crudMethod, payload) => await AxiosMethod(`${Model}Router/${crudMethod}/`)\nconst extractResponse = (payload) => httpRequest(rteLogin, payload)\nextractResponse({username: usernameField, password: passField}).data.loggedIn\nsetLoggedIn(extractResponse({username: usernameField, password: passField}).data.loggedIn)\n\n\n\n\n\n\n    // export default httpRequest = async (AxiosMethod, crudMethod, model,  payload) => {\n\n   //    'ProjectRouter/\n\n// const crudSwitch = (model, crudMethod) => {\n//     switch (crudMethod) {\n//         case \"create\":\n//             log(report)\n//             await ApiClient.post(`/UserRouter/create/`)\n//             break\n//         case \"login\":\n//             log(report)\n//             await ApiClient.post(`/UserRouter/login/`)\n//             break\n//         case \"read\":\n//             log(report)\n//             await ApiClient.read(`/UserRouter/login/`)\n//             break\n//         case \"update\":\n//             log(report)\n//             await ApiClient.put(`/UserRouter/login/`)\n//             break\n//         case \"delete\":\n//             log(report)\n//             await ApiClient.delete(`/UserRouter/login/`)\n//             break\n//     }\n//     break\n// }\n\n// case \"User\":\n//     crudSwitch(\"User\")\n// case \"Profile\":\n//     crudSwitch(\"Profile\")\n// case \"Project\":\n//     crudSwitch(\"Project\")\n// }\n\n\n\n\n\n\n\n\n//     switch (model) {\n//         case \"User\":\n//             switch (crudMethod) {\n//                 case \"create\":\n//                     log(report)\n//                     await ApiClient.post(`/UserRouter/create/`)\n//                     break\n//                 case \"login\":\n//                     log(report)\n//                     await ApiClient.post(`/UserRouter/login/`)\n//                     break\n//                 case \"read\":\n//                     log(report)\n//                     await ApiClient.read(`/UserRouter/login/`)\n//                     break\n//                 case \"update\":\n//                     log(report)\n//                     await ApiClient.put(`/UserRouter/login/`)\n//                     break\n//                 case \"delete\":\n//                     log(report)\n//                     await ApiClient.delete(`/UserRouter/login/`)\n//                     break\n//             }\n//             break\n//         case \"Project\":\n//             switch (crudMethod) {\n//                 case \"create\":\n//                     log(report)\n//                     await ApiClient.post(`/UserRouter/create/`)\n//                     break\n//                 case \"read\":\n//                     log(report)\n//                     await ApiClient.read(`/UserRouter/login/`)\n//                     break\n//                 case \"update\":\n//                     log(report)\n//                     await ApiClient.put(`/UserRouter/login/`)\n//                     break\n//                 case \"delete\":\n//                     log(report)\n//                     await ApiClient.delete(`/UserRouter/login/`)\n//                     break\n//         case \"Profile\":\n//             switch (crudMethod) {\n//                 case \"create\":\n//                     log(report)\n//                     await ApiClient.post(`/UserRouter/create/`)\n//                     break\n//                 case \"read\":\n//                     log(report)\n//                     await ApiClient.read(`/UserRouter/login/`)\n//                     break\n//                 case \"update\":\n//                     log(report)\n//                     await ApiClient.put(`/UserRouter/login/`)\n//                     break\n//                 case \"delete\":\n//                     log(report)\n//                     await ApiClient.delete(`/UserRouter/login/`)\n//                     break\n//         default: \n//             console.log(\"No cases matched. httpRequest() input or switch case name likely mispelled or mismatched.\")\n//     }\n// }\n\n// switch (crudMethod) {\n//             case \"create\":\n//                 log(report)\n//                 await ApiClient.post(`${Model}Router/${crudMethod}/`)\n//                 break\n//             case \"login\":\n//                 log(report)\n//                 await ApiClient.post(`/UserRouter/login/`)\n//                 break\n//             case \"read\":\n//                 log(report)\n//                 await ApiClient.read(`/UserRouter/login/`)\n//                 break\n//             case \"update\":\n//                 log(report)\n//                 await ApiClient.put(`/UserRouter/login/`)\n//                 break\n//             case \"delete\":\n//                 log(report)\n//                 await ApiClient.delete(`/UserRouter/login/`)\n//                 break\n//         }\n//         break\n//     default: \n//         console.log(\"No cases matched. httpRequest() input or switch case name likely mispelled or mismatched.\")\n// }\n// }\n\n    // CRUD REQUESTS AS FOLLOWS: \n\n    // Create: \n    // httpRequest(\"create\", ('Projects' | 'Contributors' | 'Users'), {...field: value, field: value})\n\n    // Read: \n    // httpRequest(\"read\", ('Projects' | 'Contributors' | 'Users'))\n\n    // Update: \n    // httpRequest(\"update\", ('Projects' | 'Contributors' | 'Users'), { newValues: {...field: NEWvalue, field: NEWvalue}, identifier: {field: currentValue}})\n\n    // Delete: \n    // httpRequest(\"update\", ('Projects' | 'Contributors' | 'Users'), {field: identifyingValue})\n\n\n// httpRequest(\"create\", \"Projects\", {\n//     title: \"PROJECT1000\", \n//     description: \"1000\", \n//     deployLink: \"1000\", \n//     repoLink: \"1000\", \n//     technologies: \"1000\", \n//     iframeEnabled: true\n// })\n\n\n// httpRequest(\"update\", \"Projects\", {newValues: {language: \"Ruby\"}, identifier: {language: 'Python'}})\n// httpRequest(\"delete\", \"Projects\", {language: \"Ruby\"})\n\n\n// httpRequest(\"read\", \"Projects\")\n\n\n// httpRequest(\"create\", \"Users\", {\n//     name: \"USER 1\", \n//     email: \"collin@yahoo.com\", \n//     password: \"hi\", \n//     profilepic: \"extremelyhandsome.filehost.com\", \n//     professionalTitle: \"Beast\", \n//     organization: \"Google\", \n//     biography: \"A cool person.\", \n//     locale: \"Chicago\"})\n\n\n// httpRequest(\"update\", \"Users\", {newValues: {email: \"adam@mail.com\"}, identifier: {lastName: 'Honore'}})\n// httpRequest(\"delete\", \"Users\", {lastName: \"Honore\"})\n// httpRequest(\"read\", \"Users\")\n\n\n// httpRequest(\"create\", \"Contributors\", {projectId:4, userId:2, role: \"creator\"})\n// httpRequest(\"update\", \"Contributors\", {newValues: {prompt: \"Fix the for-loop\"}, identifier: {prompt: \"Write a for-loop\"}})\n// httpRequest(\"delete\", \"Contributors\", {prompt: \"Fix the for-loop\"})\n// httpRequest(\"read\", \"Contributors\")\n\n\n// const ContributorsWithCore = async () => {\n//     try {\n//       const Contributors = await Contributors.findAll({\n//         include: [{ model: Cores, as: 'parentCore' }]\n//       })\n//       console.log(Contributors)\n//       return true\n//     } catch (error) {\n//       console.log(error)\n//       return false\n//     }\n//   }\n  \n// ContributorsWithCore()",["57","58"],"/Users/lisawand/SEIFolder/unit3/homework/portfolio-host/client/src/pages/SignInUpFunction.js",["59"],"import React from 'react';\nimport SignInSignUpForm from \"./subcomponents/SignInSignUpForm\"\n\n\nconst SignInUpFunction = (props) => {\n   return (\n       <div></div>\n   )\n}\n\nexport default SignInUpFunction",{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","severity":1,"message":"65","line":16,"column":11,"nodeType":"66","messageId":"67","endLine":16,"endColumn":22},{"ruleId":"68","severity":1,"message":"69","line":44,"column":34,"nodeType":"70","messageId":"71","endLine":44,"endColumn":36},{"ruleId":"60","replacedBy":"72"},{"ruleId":"62","replacedBy":"73"},{"ruleId":"74","severity":2,"message":"75","line":54,"column":33,"nodeType":"66","messageId":"76","endLine":54,"endColumn":49},{"ruleId":"64","severity":1,"message":"77","line":80,"column":30,"nodeType":"66","messageId":"67","endLine":80,"endColumn":41},{"ruleId":"64","severity":1,"message":"78","line":80,"column":43,"nodeType":"66","messageId":"67","endLine":80,"endColumn":56},{"ruleId":"68","severity":1,"message":"69","line":44,"column":34,"nodeType":"70","messageId":"71","endLine":44,"endColumn":36},{"ruleId":null,"fatal":true,"severity":2,"message":"79","line":51,"column":9},{"ruleId":"60","replacedBy":"80"},{"ruleId":"62","replacedBy":"81"},{"ruleId":"64","severity":1,"message":"82","line":2,"column":8,"nodeType":"66","messageId":"67","endLine":2,"endColumn":24},"no-native-reassign",["83"],"no-negated-in-lhs",["84"],"no-unused-vars","'getProfiles' is assigned a value but never used.","Identifier","unusedVar","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected",["83"],["84"],"no-undef","'LoginUserService' is not defined.","undef","'currentUser' is assigned a value but never used.","'authenticated' is assigned a value but never used.","Parsing error: Unexpected token, expected \";\"\n\n\u001b[0m \u001b[90m 49 | \u001b[39m\u001b[36mconst\u001b[39m [isUserLoggedIn\u001b[33m,\u001b[39m setLoginStatus] \u001b[33m=\u001b[39m useState({})\u001b[0m\n\u001b[0m \u001b[90m 50 | \u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 51 | \u001b[39m\u001b[33m<\u001b[39m\u001b[33mbutton\u001b[39m onClick\u001b[33m=\u001b[39m{()\u001b[33m=>\u001b[39msetLoginStatus(httpRequest(\u001b[32m\"login\"\u001b[39m\u001b[33m,\u001b[39m loginInformation\u001b[33m,\u001b[39m [\u001b[32m\"isUserLoggedIn\"\u001b[39m]))}\u001b[33m>\u001b[39m\u001b[33m<\u001b[39m\u001b[33m/\u001b[39m\u001b[33mbutton\u001b[39m\u001b[33m>\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m    | \u001b[39m        \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 52 | \u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 53 | \u001b[39mhttpRequest(\u001b[32m\"login\"\u001b[39m\u001b[33m,\u001b[39m{})\u001b[0m\n\u001b[0m \u001b[90m 54 | \u001b[39m\u001b[0m",["83"],["84"],"'SignInSignUpForm' is defined but never used.","no-global-assign","no-unsafe-negation"]